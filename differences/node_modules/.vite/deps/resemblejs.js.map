{
  "version": 3,
  "sources": ["../../canvas/lib/parse-font.js", "../../canvas/browser.js", "../../resemblejs/resemble.js"],
  "sourcesContent": ["'use strict'\n\n/**\n * Font RegExp helpers.\n */\n\nconst weights = 'bold|bolder|lighter|[1-9]00'\nconst styles = 'italic|oblique'\nconst variants = 'small-caps'\nconst stretches = 'ultra-condensed|extra-condensed|condensed|semi-condensed|semi-expanded|expanded|extra-expanded|ultra-expanded'\nconst units = 'px|pt|pc|in|cm|mm|%|em|ex|ch|rem|q'\nconst string = '\\'([^\\']+)\\'|\"([^\"]+)\"|[\\\\w\\\\s-]+'\n\n// [ [ <‘font-style’> || <font-variant-css21> || <‘font-weight’> || <‘font-stretch’> ]?\n//    <‘font-size’> [ / <‘line-height’> ]? <‘font-family’> ]\n// https://drafts.csswg.org/css-fonts-3/#font-prop\nconst weightRe = new RegExp(`(${weights}) +`, 'i')\nconst styleRe = new RegExp(`(${styles}) +`, 'i')\nconst variantRe = new RegExp(`(${variants}) +`, 'i')\nconst stretchRe = new RegExp(`(${stretches}) +`, 'i')\nconst sizeFamilyRe = new RegExp(\n  `([\\\\d\\\\.]+)(${units}) *((?:${string})( *, *(?:${string}))*)`)\n\n/**\n * Cache font parsing.\n */\n\nconst cache = {}\n\nconst defaultHeight = 16 // pt, common browser default\n\n/**\n * Parse font `str`.\n *\n * @param {String} str\n * @return {Object} Parsed font. `size` is in device units. `unit` is the unit\n *   appearing in the input string.\n * @api private\n */\n\nmodule.exports = str => {\n  // Cached\n  if (cache[str]) return cache[str]\n\n  // Try for required properties first.\n  const sizeFamily = sizeFamilyRe.exec(str)\n  if (!sizeFamily) return // invalid\n\n  // Default values and required properties\n  const font = {\n    weight: 'normal',\n    style: 'normal',\n    stretch: 'normal',\n    variant: 'normal',\n    size: parseFloat(sizeFamily[1]),\n    unit: sizeFamily[2],\n    family: sizeFamily[3].replace(/[\"']/g, '').replace(/ *, */g, ',')\n  }\n\n  // Optional, unordered properties.\n  let weight, style, variant, stretch\n  // Stop search at `sizeFamily.index`\n  const substr = str.substring(0, sizeFamily.index)\n  if ((weight = weightRe.exec(substr))) font.weight = weight[1]\n  if ((style = styleRe.exec(substr))) font.style = style[1]\n  if ((variant = variantRe.exec(substr))) font.variant = variant[1]\n  if ((stretch = stretchRe.exec(substr))) font.stretch = stretch[1]\n\n  // Convert to device units. (`font.unit` is the original unit)\n  // TODO: ch, ex\n  switch (font.unit) {\n    case 'pt':\n      font.size /= 0.75\n      break\n    case 'pc':\n      font.size *= 16\n      break\n    case 'in':\n      font.size *= 96\n      break\n    case 'cm':\n      font.size *= 96.0 / 2.54\n      break\n    case 'mm':\n      font.size *= 96.0 / 25.4\n      break\n    case '%':\n      // TODO disabled because existing unit tests assume 100\n      // font.size *= defaultHeight / 100 / 0.75\n      break\n    case 'em':\n    case 'rem':\n      font.size *= defaultHeight / 0.75\n      break\n    case 'q':\n      font.size *= 96 / 25.4 / 4\n      break\n  }\n\n  return (cache[str] = font)\n}\n", "/* globals document, ImageData */\n\nconst parseFont = require('./lib/parse-font')\n\nexports.parseFont = parseFont\n\nexports.createCanvas = function (width, height) {\n  return Object.assign(document.createElement('canvas'), { width: width, height: height })\n}\n\nexports.createImageData = function (array, width, height) {\n  // Browser implementation of ImageData looks at the number of arguments passed\n  switch (arguments.length) {\n    case 0: return new ImageData()\n    case 1: return new ImageData(array)\n    case 2: return new ImageData(array, width)\n    default: return new ImageData(array, width, height)\n  }\n}\n\nexports.loadImage = function (src, options) {\n  return new Promise(function (resolve, reject) {\n    const image = Object.assign(document.createElement('img'), options)\n\n    function cleanup () {\n      image.onload = null\n      image.onerror = null\n    }\n\n    image.onload = function () { cleanup(); resolve(image) }\n    image.onerror = function () { cleanup(); reject(new Error('Failed to load the image \"' + src + '\"')) }\n\n    image.src = src\n  })\n}\n", "/*\nJames Cryer / Huddle\nURL: https://github.com/Huddle/Resemble.js\n*/\n\nvar naiveFallback = function () {\n    // ISC (c) 2011-2019 https://github.com/medikoo/es5-ext/blob/master/global.js\n    if (typeof self === \"object\" && self) {\n        return self;\n    }\n    if (typeof window === \"object\" && window) {\n        return window;\n    }\n    throw new Error(\"Unable to resolve global `this`\");\n};\n\nvar getGlobalThis = function () {\n    // ISC (c) 2011-2019 https://github.com/medikoo/es5-ext/blob/master/global.js\n    // Fallback to standard globalThis if available\n    if (typeof globalThis === \"object\" && globalThis) {\n        return globalThis;\n    }\n\n    try {\n        Object.defineProperty(Object.prototype, \"__global__\", {\n            get: function () {\n                return this;\n            },\n            configurable: true\n        });\n    } catch (error) {\n        return naiveFallback();\n    }\n    try {\n        // eslint-disable-next-line no-undef\n        if (!__global__) {\n            return naiveFallback();\n        }\n        return __global__; // eslint-disable-line no-undef\n    } finally {\n        delete Object.prototype.__global__;\n    }\n};\n\nvar isNode = function () {\n    const globalPolyfill = getGlobalThis();\n    return typeof globalPolyfill.process !== \"undefined\" && globalPolyfill.process.versions && globalPolyfill.process.versions.node;\n};\n\n(function (root, factory) {\n    \"use strict\";\n    if (typeof define === \"function\" && define.amd) {\n        define([], factory);\n    } else if (typeof module === \"object\" && module.exports) {\n        module.exports = factory();\n    } else {\n        root.resemble = factory();\n    }\n})(this /* eslint-disable-line no-invalid-this*/, function () {\n    \"use strict\";\n\n    var Img;\n    var Canvas;\n    var loadNodeCanvasImage;\n\n    if (isNode()) {\n        Canvas = require(\"canvas\"); // eslint-disable-line global-require\n        Img = Canvas.Image;\n        loadNodeCanvasImage = Canvas.loadImage;\n    } else {\n        Img = Image;\n    }\n\n    function createCanvas(width, height) {\n        if (isNode()) {\n            return Canvas.createCanvas(width, height);\n        }\n\n        var cnvs = document.createElement(\"canvas\");\n        cnvs.width = width;\n        cnvs.height = height;\n        return cnvs;\n    }\n\n    var oldGlobalSettings = {};\n    var globalOutputSettings = oldGlobalSettings;\n\n    var resemble = function (fileData) {\n        var pixelTransparency = 1;\n\n        var errorPixelColor = {\n            // Color for Error Pixels. Between 0 and 255.\n            red: 255,\n            green: 0,\n            blue: 255,\n            alpha: 255\n        };\n\n        var targetPix = { r: 0, g: 0, b: 0, a: 0 }; // isAntialiased\n\n        var errorPixelTransform = {\n            flat: function (px, offset) {\n                px[offset] = errorPixelColor.red;\n                px[offset + 1] = errorPixelColor.green;\n                px[offset + 2] = errorPixelColor.blue;\n                px[offset + 3] = errorPixelColor.alpha;\n            },\n            movement: function (px, offset, d1, d2) {\n                px[offset] = (d2.r * (errorPixelColor.red / 255) + errorPixelColor.red) / 2;\n                px[offset + 1] = (d2.g * (errorPixelColor.green / 255) + errorPixelColor.green) / 2;\n                px[offset + 2] = (d2.b * (errorPixelColor.blue / 255) + errorPixelColor.blue) / 2;\n                px[offset + 3] = d2.a;\n            },\n            flatDifferenceIntensity: function (px, offset, d1, d2) {\n                px[offset] = errorPixelColor.red;\n                px[offset + 1] = errorPixelColor.green;\n                px[offset + 2] = errorPixelColor.blue;\n                px[offset + 3] = colorsDistance(d1, d2);\n            },\n            movementDifferenceIntensity: function (px, offset, d1, d2) {\n                var ratio = (colorsDistance(d1, d2) / 255) * 0.8;\n\n                px[offset] = (1 - ratio) * (d2.r * (errorPixelColor.red / 255)) + ratio * errorPixelColor.red;\n                px[offset + 1] = (1 - ratio) * (d2.g * (errorPixelColor.green / 255)) + ratio * errorPixelColor.green;\n                px[offset + 2] = (1 - ratio) * (d2.b * (errorPixelColor.blue / 255)) + ratio * errorPixelColor.blue;\n                px[offset + 3] = d2.a;\n            },\n            diffOnly: function (px, offset, d1, d2) {\n                px[offset] = d2.r;\n                px[offset + 1] = d2.g;\n                px[offset + 2] = d2.b;\n                px[offset + 3] = d2.a;\n            }\n        };\n\n        var errorPixel = errorPixelTransform.flat;\n        var errorType;\n        var boundingBoxes;\n        var ignoredBoxes;\n        var ignoreAreasColoredWith;\n        var largeImageThreshold = 1200;\n        var useCrossOrigin = true;\n        var data = {};\n        var images = [];\n        var updateCallbackArray = [];\n\n        var tolerance = {\n            // between 0 and 255\n            red: 16,\n            green: 16,\n            blue: 16,\n            alpha: 16,\n            minBrightness: 16,\n            maxBrightness: 240\n        };\n\n        var ignoreAntialiasing = false;\n        var ignoreColors = false;\n        var scaleToSameSize = false;\n        var compareOnly = false;\n        var returnEarlyThreshold;\n\n        function colorsDistance(c1, c2) {\n            return (Math.abs(c1.r - c2.r) + Math.abs(c1.g - c2.g) + Math.abs(c1.b - c2.b)) / 3;\n        }\n\n        function withinBoundingBox(x, y, width, height, box) {\n            return x > (box.left || 0) && x < (box.right || width) && y > (box.top || 0) && y < (box.bottom || height);\n        }\n\n        function withinComparedArea(x, y, width, height, pixel2) {\n            var isIncluded = true;\n            var i;\n            var boundingBox;\n            var ignoredBox;\n            var selected;\n            var ignored;\n\n            if (boundingBoxes instanceof Array) {\n                selected = false;\n                for (i = 0; i < boundingBoxes.length; i++) {\n                    boundingBox = boundingBoxes[i];\n                    if (withinBoundingBox(x, y, width, height, boundingBox)) {\n                        selected = true;\n                        break;\n                    }\n                }\n            }\n            if (ignoredBoxes instanceof Array) {\n                ignored = true;\n                for (i = 0; i < ignoredBoxes.length; i++) {\n                    ignoredBox = ignoredBoxes[i];\n                    if (withinBoundingBox(x, y, width, height, ignoredBox)) {\n                        ignored = false;\n                        break;\n                    }\n                }\n            }\n\n            if (ignoreAreasColoredWith) {\n                return colorsDistance(pixel2, ignoreAreasColoredWith) !== 0;\n            }\n\n            if (selected === undefined && ignored === undefined) {\n                return true;\n            }\n            if (selected === false && ignored === true) {\n                return false;\n            }\n            if (selected === true || ignored === true) {\n                isIncluded = true;\n            }\n            if (selected === false || ignored === false) {\n                isIncluded = false;\n            }\n            return isIncluded;\n        }\n\n        function triggerDataUpdate() {\n            var len = updateCallbackArray.length;\n            var i;\n            for (i = 0; i < len; i++) {\n                if (typeof updateCallbackArray[i] === \"function\") {\n                    updateCallbackArray[i](data);\n                }\n            }\n        }\n\n        function loop(w, h, callback) {\n            var x;\n            var y;\n\n            for (x = 0; x < w; x++) {\n                for (y = 0; y < h; y++) {\n                    callback(x, y);\n                }\n            }\n        }\n\n        function parseImage(sourceImageData, width, height) {\n            var pixelCount = 0;\n            var redTotal = 0;\n            var greenTotal = 0;\n            var blueTotal = 0;\n            var alphaTotal = 0;\n            var brightnessTotal = 0;\n            var whiteTotal = 0;\n            var blackTotal = 0;\n\n            loop(width, height, function (horizontalPos, verticalPos) {\n                var offset = (verticalPos * width + horizontalPos) * 4;\n                var red = sourceImageData[offset];\n                var green = sourceImageData[offset + 1];\n                var blue = sourceImageData[offset + 2];\n                var alpha = sourceImageData[offset + 3];\n                var brightness = getBrightness(red, green, blue);\n\n                if (red === green && red === blue && alpha) {\n                    if (red === 0) {\n                        blackTotal++;\n                    } else if (red === 255) {\n                        whiteTotal++;\n                    }\n                }\n\n                pixelCount++;\n\n                redTotal += (red / 255) * 100;\n                greenTotal += (green / 255) * 100;\n                blueTotal += (blue / 255) * 100;\n                alphaTotal += ((255 - alpha) / 255) * 100;\n                brightnessTotal += (brightness / 255) * 100;\n            });\n\n            data.red = Math.floor(redTotal / pixelCount);\n            data.green = Math.floor(greenTotal / pixelCount);\n            data.blue = Math.floor(blueTotal / pixelCount);\n            data.alpha = Math.floor(alphaTotal / pixelCount);\n            data.brightness = Math.floor(brightnessTotal / pixelCount);\n            data.white = Math.floor((whiteTotal / pixelCount) * 100);\n            data.black = Math.floor((blackTotal / pixelCount) * 100);\n\n            triggerDataUpdate();\n        }\n\n        function onLoadImage(hiddenImage, callback) {\n            // don't assign to hiddenImage, see https://github.com/Huddle/Resemble.js/pull/87/commits/300d43352a2845aad289b254bfbdc7cd6a37e2d7\n            var width = hiddenImage.width;\n            var height = hiddenImage.height;\n\n            if (scaleToSameSize && images.length === 1) {\n                width = images[0].width;\n                height = images[0].height;\n            }\n\n            var hiddenCanvas = createCanvas(width, height);\n            var imageData;\n\n            hiddenCanvas.getContext(\"2d\").drawImage(hiddenImage, 0, 0, width, height);\n            imageData = hiddenCanvas.getContext(\"2d\").getImageData(0, 0, width, height);\n\n            images.push(imageData);\n\n            callback(imageData, width, height);\n        }\n\n        function loadImageData(fileDataForImage, callback) {\n            var fileReader;\n            var hiddenImage = new Img();\n\n            if (!hiddenImage.setAttribute) {\n                hiddenImage.setAttribute = function setAttribute() {};\n            }\n\n            if (useCrossOrigin) {\n                hiddenImage.setAttribute(\"crossorigin\", \"anonymous\");\n            }\n\n            hiddenImage.onerror = function (event) {\n                hiddenImage.onload = null;\n                hiddenImage.onerror = null; // fixes pollution between calls\n                const error = event ? event + \"\" : \"Unknown error\";\n                images.push({ error: `Failed to load image '${fileDataForImage}'. ${error}` });\n                callback();\n            };\n\n            hiddenImage.onload = function () {\n                hiddenImage.onload = null; // fixes pollution between calls\n                hiddenImage.onerror = null;\n                onLoadImage(hiddenImage, callback);\n            };\n\n            if (typeof fileDataForImage === \"string\") {\n                hiddenImage.src = fileDataForImage;\n                if (!isNode() && hiddenImage.complete && hiddenImage.naturalWidth > 0) {\n                    hiddenImage.onload();\n                }\n            } else if (\n                typeof fileDataForImage.data !== \"undefined\" &&\n                typeof fileDataForImage.width === \"number\" &&\n                typeof fileDataForImage.height === \"number\"\n            ) {\n                images.push(fileDataForImage);\n\n                callback(fileDataForImage, fileDataForImage.width, fileDataForImage.height);\n            } else if (typeof Buffer !== \"undefined\" && fileDataForImage instanceof Buffer) {\n                // If we have Buffer, assume we're on Node+Canvas and its supported\n                // hiddenImage.src = fileDataForImage;\n\n                loadNodeCanvasImage(fileDataForImage)\n                    .then(function (image) {\n                        hiddenImage.onload = null; // fixes pollution between calls\n                        hiddenImage.onerror = null;\n                        onLoadImage(image, callback);\n                    })\n                    .catch(function (err) {\n                        images.push({\n                            error: err ? err + \"\" : \"Image load error.\"\n                        });\n                        callback();\n                    });\n            } else {\n                fileReader = new FileReader();\n                fileReader.onload = function (event) {\n                    hiddenImage.src = event.target.result;\n                };\n                fileReader.readAsDataURL(fileDataForImage);\n            }\n        }\n\n        function isColorSimilar(a, b, color) {\n            var absDiff = Math.abs(a - b);\n\n            if (typeof a === \"undefined\") {\n                return false;\n            }\n            if (typeof b === \"undefined\") {\n                return false;\n            }\n\n            if (a === b) {\n                return true;\n            } else if (absDiff < tolerance[color]) {\n                return true;\n            }\n            return false;\n        }\n\n        function isPixelBrightnessSimilar(d1, d2) {\n            var alpha = isColorSimilar(d1.a, d2.a, \"alpha\");\n            var brightness = isColorSimilar(d1.brightness, d2.brightness, \"minBrightness\");\n            return brightness && alpha;\n        }\n\n        function getBrightness(r, g, b) {\n            return 0.3 * r + 0.59 * g + 0.11 * b;\n        }\n\n        function isRGBSame(d1, d2) {\n            var red = d1.r === d2.r;\n            var green = d1.g === d2.g;\n            var blue = d1.b === d2.b;\n            return red && green && blue;\n        }\n\n        function isRGBSimilar(d1, d2) {\n            var red = isColorSimilar(d1.r, d2.r, \"red\");\n            var green = isColorSimilar(d1.g, d2.g, \"green\");\n            var blue = isColorSimilar(d1.b, d2.b, \"blue\");\n            var alpha = isColorSimilar(d1.a, d2.a, \"alpha\");\n\n            return red && green && blue && alpha;\n        }\n\n        function isContrasting(d1, d2) {\n            return Math.abs(d1.brightness - d2.brightness) > tolerance.maxBrightness;\n        }\n\n        function getHue(red, green, blue) {\n            var r = red / 255;\n            var g = green / 255;\n            var b = blue / 255;\n            var max = Math.max(r, g, b);\n            var min = Math.min(r, g, b);\n            var h;\n            var d;\n\n            if (max === min) {\n                h = 0; // achromatic\n            } else {\n                d = max - min;\n                switch (max) {\n                    case r:\n                        h = (g - b) / d + (g < b ? 6 : 0);\n                        break;\n                    case g:\n                        h = (b - r) / d + 2;\n                        break;\n                    case b:\n                        h = (r - g) / d + 4;\n                        break;\n                    default:\n                        h /= 6;\n                }\n            }\n\n            return h;\n        }\n\n        function isAntialiased(sourcePix, pix, cacheSet, verticalPos, horizontalPos, width) {\n            var offset;\n            var distance = 1;\n            var i;\n            var j;\n            var hasHighContrastSibling = 0;\n            var hasSiblingWithDifferentHue = 0;\n            var hasEquivalentSibling = 0;\n\n            addHueInfo(sourcePix);\n\n            for (i = distance * -1; i <= distance; i++) {\n                for (j = distance * -1; j <= distance; j++) {\n                    if (i === 0 && j === 0) {\n                        // ignore source pixel\n                    } else {\n                        offset = ((verticalPos + j) * width + (horizontalPos + i)) * 4;\n\n                        if (!getPixelInfo(targetPix, pix, offset, cacheSet)) {\n                            continue;\n                        }\n\n                        addBrightnessInfo(targetPix);\n                        addHueInfo(targetPix);\n\n                        if (isContrasting(sourcePix, targetPix)) {\n                            hasHighContrastSibling++;\n                        }\n\n                        if (isRGBSame(sourcePix, targetPix)) {\n                            hasEquivalentSibling++;\n                        }\n\n                        if (Math.abs(targetPix.h - sourcePix.h) > 0.3) {\n                            hasSiblingWithDifferentHue++;\n                        }\n\n                        if (hasSiblingWithDifferentHue > 1 || hasHighContrastSibling > 1) {\n                            return true;\n                        }\n                    }\n                }\n            }\n\n            if (hasEquivalentSibling < 2) {\n                return true;\n            }\n\n            return false;\n        }\n\n        function copyPixel(px, offset, pix) {\n            if (errorType === \"diffOnly\") {\n                return;\n            }\n\n            px[offset] = pix.r; // r\n            px[offset + 1] = pix.g; // g\n            px[offset + 2] = pix.b; // b\n            px[offset + 3] = pix.a * pixelTransparency; // a\n        }\n\n        function copyGrayScalePixel(px, offset, pix) {\n            if (errorType === \"diffOnly\") {\n                return;\n            }\n\n            px[offset] = pix.brightness; // r\n            px[offset + 1] = pix.brightness; // g\n            px[offset + 2] = pix.brightness; // b\n            px[offset + 3] = pix.a * pixelTransparency; // a\n        }\n\n        function getPixelInfo(dst, pix, offset) {\n            if (pix.length > offset) {\n                dst.r = pix[offset];\n                dst.g = pix[offset + 1];\n                dst.b = pix[offset + 2];\n                dst.a = pix[offset + 3];\n\n                return true;\n            }\n\n            return false;\n        }\n\n        function addBrightnessInfo(pix) {\n            pix.brightness = getBrightness(pix.r, pix.g, pix.b); // 'corrected' lightness\n        }\n\n        function addHueInfo(pix) {\n            pix.h = getHue(pix.r, pix.g, pix.b);\n        }\n\n        function analyseImages(img1, img2, width, height) {\n            var data1 = img1.data;\n            var data2 = img2.data;\n            var hiddenCanvas;\n            var context;\n            var imgd;\n            var pix;\n\n            if (!compareOnly) {\n                hiddenCanvas = createCanvas(width, height);\n\n                context = hiddenCanvas.getContext(\"2d\");\n                imgd = context.createImageData(width, height);\n                pix = imgd.data;\n            }\n\n            var mismatchCount = 0;\n            var diffBounds = {\n                top: height,\n                left: width,\n                bottom: 0,\n                right: 0\n            };\n            var updateBounds = function (x, y) {\n                diffBounds.left = Math.min(x, diffBounds.left);\n                diffBounds.right = Math.max(x, diffBounds.right);\n                diffBounds.top = Math.min(y, diffBounds.top);\n                diffBounds.bottom = Math.max(y, diffBounds.bottom);\n            };\n\n            var time = Date.now();\n\n            var skip;\n\n            if (!!largeImageThreshold && ignoreAntialiasing && (width > largeImageThreshold || height > largeImageThreshold)) {\n                skip = 6;\n            }\n\n            var pixel1 = { r: 0, g: 0, b: 0, a: 0 };\n            var pixel2 = { r: 0, g: 0, b: 0, a: 0 };\n\n            var skipTheRest = false;\n\n            loop(width, height, function (horizontalPos, verticalPos) {\n                if (skipTheRest) {\n                    return;\n                }\n\n                if (skip) {\n                    // only skip if the image isn't small\n                    if (verticalPos % skip === 0 || horizontalPos % skip === 0) {\n                        return;\n                    }\n                }\n\n                var offset = (verticalPos * width + horizontalPos) * 4;\n                if (!getPixelInfo(pixel1, data1, offset, 1) || !getPixelInfo(pixel2, data2, offset, 2)) {\n                    return;\n                }\n\n                var isWithinComparedArea = withinComparedArea(horizontalPos, verticalPos, width, height, pixel2);\n\n                if (ignoreColors) {\n                    addBrightnessInfo(pixel1);\n                    addBrightnessInfo(pixel2);\n\n                    if (isPixelBrightnessSimilar(pixel1, pixel2) || !isWithinComparedArea) {\n                        if (!compareOnly) {\n                            copyGrayScalePixel(pix, offset, pixel2);\n                        }\n                    } else {\n                        if (!compareOnly) {\n                            errorPixel(pix, offset, pixel1, pixel2);\n                        }\n\n                        mismatchCount++;\n                        updateBounds(horizontalPos, verticalPos);\n                    }\n                    return;\n                }\n\n                if (isRGBSimilar(pixel1, pixel2) || !isWithinComparedArea) {\n                    if (!compareOnly) {\n                        copyPixel(pix, offset, pixel1);\n                    }\n                } else if (\n                    ignoreAntialiasing &&\n                    (addBrightnessInfo(pixel1), // jit pixel info augmentation looks a little weird, sorry.\n                    addBrightnessInfo(pixel2),\n                    isAntialiased(pixel1, data1, 1, verticalPos, horizontalPos, width) || isAntialiased(pixel2, data2, 2, verticalPos, horizontalPos, width))\n                ) {\n                    if (isPixelBrightnessSimilar(pixel1, pixel2) || !isWithinComparedArea) {\n                        if (!compareOnly) {\n                            copyGrayScalePixel(pix, offset, pixel2);\n                        }\n                    } else {\n                        if (!compareOnly) {\n                            errorPixel(pix, offset, pixel1, pixel2);\n                        }\n\n                        mismatchCount++;\n                        updateBounds(horizontalPos, verticalPos);\n                    }\n                } else {\n                    if (!compareOnly) {\n                        errorPixel(pix, offset, pixel1, pixel2);\n                    }\n\n                    mismatchCount++;\n                    updateBounds(horizontalPos, verticalPos);\n                }\n\n                if (compareOnly) {\n                    var currentMisMatchPercent = (mismatchCount / (height * width)) * 100;\n\n                    if (currentMisMatchPercent > returnEarlyThreshold) {\n                        skipTheRest = true;\n                    }\n                }\n            });\n\n            data.rawMisMatchPercentage = (mismatchCount / (height * width)) * 100;\n            data.misMatchPercentage = data.rawMisMatchPercentage.toFixed(2);\n            data.diffBounds = diffBounds;\n            data.analysisTime = Date.now() - time;\n\n            data.getImageDataUrl = function (text) {\n                if (compareOnly) {\n                    throw Error(\"No diff image available - ran in compareOnly mode\");\n                }\n\n                var barHeight = 0;\n\n                if (text) {\n                    barHeight = addLabel(text, context, hiddenCanvas);\n                }\n\n                context.putImageData(imgd, 0, barHeight);\n\n                return hiddenCanvas.toDataURL(\"image/png\");\n            };\n\n            if (!compareOnly && hiddenCanvas.toBuffer) {\n                data.getBuffer = function (includeOriginal) {\n                    if (includeOriginal) {\n                        var imageWidth = hiddenCanvas.width + 2;\n                        hiddenCanvas.width = imageWidth * 3;\n                        context.putImageData(img1, 0, 0);\n                        context.putImageData(img2, imageWidth, 0);\n                        context.putImageData(imgd, imageWidth * 2, 0);\n                    } else {\n                        context.putImageData(imgd, 0, 0);\n                    }\n                    return hiddenCanvas.toBuffer();\n                };\n            }\n        }\n\n        function addLabel(text, context, hiddenCanvas) {\n            var textPadding = 2;\n\n            context.font = \"12px sans-serif\";\n\n            var textWidth = context.measureText(text).width + textPadding * 2;\n            var barHeight = 22;\n\n            if (textWidth > hiddenCanvas.width) {\n                hiddenCanvas.width = textWidth;\n            }\n\n            hiddenCanvas.height += barHeight;\n\n            context.fillStyle = \"#666\";\n            context.fillRect(0, 0, hiddenCanvas.width, barHeight - 4);\n            context.fillStyle = \"#fff\";\n            context.fillRect(0, barHeight - 4, hiddenCanvas.width, 4);\n\n            context.fillStyle = \"#fff\";\n            context.textBaseline = \"top\";\n            context.font = \"12px sans-serif\";\n            context.fillText(text, textPadding, 1);\n\n            return barHeight;\n        }\n\n        function normalise(img, w, h) {\n            var c;\n            var context;\n\n            if (img.height < h || img.width < w) {\n                c = createCanvas(w, h);\n                context = c.getContext(\"2d\");\n                context.putImageData(img, 0, 0);\n                return context.getImageData(0, 0, w, h);\n            }\n\n            return img;\n        }\n\n        function outputSettings(options) {\n            var key;\n\n            if (options.errorColor) {\n                for (key in options.errorColor) {\n                    if (options.errorColor.hasOwnProperty(key)) {\n                        errorPixelColor[key] = options.errorColor[key] === void 0 ? errorPixelColor[key] : options.errorColor[key];\n                    }\n                }\n            }\n\n            if (options.errorType && errorPixelTransform[options.errorType]) {\n                errorPixel = errorPixelTransform[options.errorType];\n                errorType = options.errorType;\n            }\n\n            if (options.errorPixel && typeof options.errorPixel === \"function\") {\n                errorPixel = options.errorPixel;\n            }\n\n            pixelTransparency = isNaN(Number(options.transparency)) ? pixelTransparency : options.transparency;\n\n            if (options.largeImageThreshold !== undefined) {\n                largeImageThreshold = options.largeImageThreshold;\n            }\n\n            if (options.useCrossOrigin !== undefined) {\n                useCrossOrigin = options.useCrossOrigin;\n            }\n\n            if (options.boundingBox !== undefined) {\n                boundingBoxes = [options.boundingBox];\n            }\n\n            if (options.ignoredBox !== undefined) {\n                ignoredBoxes = [options.ignoredBox];\n            }\n\n            if (options.boundingBoxes !== undefined) {\n                boundingBoxes = options.boundingBoxes;\n            }\n\n            if (options.ignoredBoxes !== undefined) {\n                ignoredBoxes = options.ignoredBoxes;\n            }\n\n            if (options.ignoreAreasColoredWith !== undefined) {\n                ignoreAreasColoredWith = options.ignoreAreasColoredWith;\n            }\n        }\n\n        function compare(one, two) {\n            if (globalOutputSettings !== oldGlobalSettings) {\n                outputSettings(globalOutputSettings);\n            }\n\n            function onceWeHaveBoth() {\n                var width;\n                var height;\n                if (images.length === 2) {\n                    if (images[0].error || images[1].error) {\n                        data = {};\n                        data.error = images[0].error ? images[0].error : images[1].error;\n                        triggerDataUpdate();\n                        return;\n                    }\n                    width = images[0].width > images[1].width ? images[0].width : images[1].width;\n                    height = images[0].height > images[1].height ? images[0].height : images[1].height;\n\n                    if (images[0].width === images[1].width && images[0].height === images[1].height) {\n                        data.isSameDimensions = true;\n                    } else {\n                        data.isSameDimensions = false;\n                    }\n\n                    data.dimensionDifference = {\n                        width: images[0].width - images[1].width,\n                        height: images[0].height - images[1].height\n                    };\n\n                    analyseImages(normalise(images[0], width, height), normalise(images[1], width, height), width, height);\n\n                    triggerDataUpdate();\n                }\n            }\n\n            images = [];\n            loadImageData(one, onceWeHaveBoth);\n            loadImageData(two, onceWeHaveBoth);\n        }\n\n        function getCompareApi(param) {\n            var secondFileData;\n            var hasMethod = typeof param === \"function\";\n\n            if (!hasMethod) {\n                // assume it's file data\n                secondFileData = param;\n            }\n\n            var self = {\n                setReturnEarlyThreshold: function (threshold) {\n                    if (threshold) {\n                        compareOnly = true;\n                        returnEarlyThreshold = threshold;\n                    }\n                    return self;\n                },\n                scaleToSameSize: function () {\n                    scaleToSameSize = true;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                useOriginalSize: function () {\n                    scaleToSameSize = false;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                ignoreNothing: function () {\n                    tolerance.red = 0;\n                    tolerance.green = 0;\n                    tolerance.blue = 0;\n                    tolerance.alpha = 0;\n                    tolerance.minBrightness = 0;\n                    tolerance.maxBrightness = 255;\n\n                    ignoreAntialiasing = false;\n                    ignoreColors = false;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                ignoreLess: function () {\n                    tolerance.red = 16;\n                    tolerance.green = 16;\n                    tolerance.blue = 16;\n                    tolerance.alpha = 16;\n                    tolerance.minBrightness = 16;\n                    tolerance.maxBrightness = 240;\n\n                    ignoreAntialiasing = false;\n                    ignoreColors = false;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                ignoreAntialiasing: function () {\n                    tolerance.red = 32;\n                    tolerance.green = 32;\n                    tolerance.blue = 32;\n                    tolerance.alpha = 32;\n                    tolerance.minBrightness = 64;\n                    tolerance.maxBrightness = 96;\n\n                    ignoreAntialiasing = true;\n                    ignoreColors = false;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                ignoreColors: function () {\n                    tolerance.alpha = 16;\n                    tolerance.minBrightness = 16;\n                    tolerance.maxBrightness = 240;\n\n                    ignoreAntialiasing = false;\n                    ignoreColors = true;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                ignoreAlpha: function () {\n                    tolerance.red = 16;\n                    tolerance.green = 16;\n                    tolerance.blue = 16;\n                    tolerance.alpha = 255;\n                    tolerance.minBrightness = 16;\n                    tolerance.maxBrightness = 240;\n\n                    ignoreAntialiasing = false;\n                    ignoreColors = false;\n\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                repaint: function () {\n                    if (hasMethod) {\n                        param();\n                    }\n                    return self;\n                },\n                outputSettings: function (options) {\n                    outputSettings(options);\n                    return self;\n                },\n                onComplete: function (callback) {\n                    updateCallbackArray.push(callback);\n\n                    var wrapper = function () {\n                        compare(fileData, secondFileData);\n                    };\n\n                    wrapper();\n\n                    return getCompareApi(wrapper);\n                },\n                setupCustomTolerance: function (customSettings) {\n                    for (var property in tolerance) {\n                        if (!customSettings.hasOwnProperty(property)) {\n                            continue;\n                        }\n\n                        tolerance[property] = customSettings[property];\n                    }\n                }\n            };\n\n            return self;\n        }\n\n        var rootSelf = {\n            onComplete: function (callback) {\n                updateCallbackArray.push(callback);\n                loadImageData(fileData, function (imageData, width, height) {\n                    parseImage(imageData.data, width, height);\n                });\n            },\n            compareTo: function (secondFileData) {\n                return getCompareApi(secondFileData);\n            },\n            outputSettings: function (options) {\n                outputSettings(options);\n                return rootSelf;\n            }\n        };\n\n        return rootSelf;\n    };\n\n    function setGlobalOutputSettings(settings) {\n        globalOutputSettings = settings;\n        return resemble;\n    }\n\n    function applyIgnore(api, ignore, customTolerance) {\n        switch (ignore) {\n            case \"nothing\":\n                api.ignoreNothing();\n                break;\n            case \"less\":\n                api.ignoreLess();\n                break;\n            case \"antialiasing\":\n                api.ignoreAntialiasing();\n                break;\n            case \"colors\":\n                api.ignoreColors();\n                break;\n            case \"alpha\":\n                api.ignoreAlpha();\n                break;\n            default:\n                throw new Error(\"Invalid ignore: \" + ignore);\n        }\n\n        api.setupCustomTolerance(customTolerance);\n    }\n\n    resemble.compare = function (image1, image2, options, cb) {\n        var callback;\n        var opt;\n\n        if (typeof options === \"function\") {\n            callback = options;\n            opt = {};\n        } else {\n            callback = cb;\n            opt = options || {};\n        }\n\n        var res = resemble(image1);\n        var compare;\n\n        if (opt.output) {\n            res.outputSettings(opt.output);\n        }\n\n        compare = res.compareTo(image2);\n\n        if (opt.returnEarlyThreshold) {\n            compare.setReturnEarlyThreshold(opt.returnEarlyThreshold);\n        }\n\n        if (opt.scaleToSameSize) {\n            compare.scaleToSameSize();\n        }\n\n        var toleranceSettings = opt.tolerance || {};\n        if (typeof opt.ignore === \"string\") {\n            applyIgnore(compare, opt.ignore, toleranceSettings);\n        } else if (opt.ignore && opt.ignore.forEach) {\n            opt.ignore.forEach(function (v) {\n                applyIgnore(compare, v, toleranceSettings);\n            });\n        }\n\n        compare.onComplete(function (data) {\n            if (data.error) {\n                callback(data.error);\n            } else {\n                callback(null, data);\n            }\n        });\n    };\n\n    resemble.outputSettings = setGlobalOutputSettings;\n    return resemble;\n});\n"],
  "mappings": ";;;;;AAAA;AAAA;AAAA;AAMA,QAAM,UAAU;AAChB,QAAM,SAAS;AACf,QAAM,WAAW;AACjB,QAAM,YAAY;AAClB,QAAM,QAAQ;AACd,QAAM,SAAS;AAKf,QAAM,WAAW,IAAI,OAAO,IAAI,OAAO,OAAO,GAAG;AACjD,QAAM,UAAU,IAAI,OAAO,IAAI,MAAM,OAAO,GAAG;AAC/C,QAAM,YAAY,IAAI,OAAO,IAAI,QAAQ,OAAO,GAAG;AACnD,QAAM,YAAY,IAAI,OAAO,IAAI,SAAS,OAAO,GAAG;AACpD,QAAM,eAAe,IAAI;AAAA,MACvB,eAAe,KAAK,UAAU,MAAM,aAAa,MAAM;AAAA,IAAM;AAM/D,QAAM,QAAQ,CAAC;AAEf,QAAM,gBAAgB;AAWtB,WAAO,UAAU,SAAO;AAEtB,UAAI,MAAM,GAAG;AAAG,eAAO,MAAM,GAAG;AAGhC,YAAM,aAAa,aAAa,KAAK,GAAG;AACxC,UAAI,CAAC;AAAY;AAGjB,YAAM,OAAO;AAAA,QACX,QAAQ;AAAA,QACR,OAAO;AAAA,QACP,SAAS;AAAA,QACT,SAAS;AAAA,QACT,MAAM,WAAW,WAAW,CAAC,CAAC;AAAA,QAC9B,MAAM,WAAW,CAAC;AAAA,QAClB,QAAQ,WAAW,CAAC,EAAE,QAAQ,SAAS,EAAE,EAAE,QAAQ,UAAU,GAAG;AAAA,MAClE;AAGA,UAAI,QAAQ,OAAO,SAAS;AAE5B,YAAM,SAAS,IAAI,UAAU,GAAG,WAAW,KAAK;AAChD,UAAK,SAAS,SAAS,KAAK,MAAM;AAAI,aAAK,SAAS,OAAO,CAAC;AAC5D,UAAK,QAAQ,QAAQ,KAAK,MAAM;AAAI,aAAK,QAAQ,MAAM,CAAC;AACxD,UAAK,UAAU,UAAU,KAAK,MAAM;AAAI,aAAK,UAAU,QAAQ,CAAC;AAChE,UAAK,UAAU,UAAU,KAAK,MAAM;AAAI,aAAK,UAAU,QAAQ,CAAC;AAIhE,cAAQ,KAAK,MAAM;AAAA,QACjB,KAAK;AACH,eAAK,QAAQ;AACb;AAAA,QACF,KAAK;AACH,eAAK,QAAQ;AACb;AAAA,QACF,KAAK;AACH,eAAK,QAAQ;AACb;AAAA,QACF,KAAK;AACH,eAAK,QAAQ,KAAO;AACpB;AAAA,QACF,KAAK;AACH,eAAK,QAAQ,KAAO;AACpB;AAAA,QACF,KAAK;AAGH;AAAA,QACF,KAAK;AAAA,QACL,KAAK;AACH,eAAK,QAAQ,gBAAgB;AAC7B;AAAA,QACF,KAAK;AACH,eAAK,QAAQ,KAAK,OAAO;AACzB;AAAA,MACJ;AAEA,aAAQ,MAAM,GAAG,IAAI;AAAA,IACvB;AAAA;AAAA;;;ACpGA;AAAA;AAEA,QAAM,YAAY;AAElB,YAAQ,YAAY;AAEpB,YAAQ,eAAe,SAAU,OAAO,QAAQ;AAC9C,aAAO,OAAO,OAAO,SAAS,cAAc,QAAQ,GAAG,EAAE,OAAc,OAAe,CAAC;AAAA,IACzF;AAEA,YAAQ,kBAAkB,SAAU,OAAO,OAAO,QAAQ;AAExD,cAAQ,UAAU,QAAQ;AAAA,QACxB,KAAK;AAAG,iBAAO,IAAI,UAAU;AAAA,QAC7B,KAAK;AAAG,iBAAO,IAAI,UAAU,KAAK;AAAA,QAClC,KAAK;AAAG,iBAAO,IAAI,UAAU,OAAO,KAAK;AAAA,QACzC;AAAS,iBAAO,IAAI,UAAU,OAAO,OAAO,MAAM;AAAA,MACpD;AAAA,IACF;AAEA,YAAQ,YAAY,SAAU,KAAK,SAAS;AAC1C,aAAO,IAAI,QAAQ,SAAU,SAAS,QAAQ;AAC5C,cAAM,QAAQ,OAAO,OAAO,SAAS,cAAc,KAAK,GAAG,OAAO;AAElE,iBAAS,UAAW;AAClB,gBAAM,SAAS;AACf,gBAAM,UAAU;AAAA,QAClB;AAEA,cAAM,SAAS,WAAY;AAAE,kBAAQ;AAAG,kBAAQ,KAAK;AAAA,QAAE;AACvD,cAAM,UAAU,WAAY;AAAE,kBAAQ;AAAG,iBAAO,IAAI,MAAM,+BAA+B,MAAM,GAAG,CAAC;AAAA,QAAE;AAErG,cAAM,MAAM;AAAA,MACd,CAAC;AAAA,IACH;AAAA;AAAA;;;AClCA;AAAA;AAKA,QAAI,gBAAgB,WAAY;AAE5B,UAAI,OAAO,SAAS,YAAY,MAAM;AAClC,eAAO;AAAA,MACX;AACA,UAAI,OAAO,WAAW,YAAY,QAAQ;AACtC,eAAO;AAAA,MACX;AACA,YAAM,IAAI,MAAM,iCAAiC;AAAA,IACrD;AAEA,QAAI,gBAAgB,WAAY;AAG5B,UAAI,OAAO,eAAe,YAAY,YAAY;AAC9C,eAAO;AAAA,MACX;AAEA,UAAI;AACA,eAAO,eAAe,OAAO,WAAW,cAAc;AAAA,UAClD,KAAK,WAAY;AACb,mBAAO;AAAA,UACX;AAAA,UACA,cAAc;AAAA,QAClB,CAAC;AAAA,MACL,SAAS,OAAO;AACZ,eAAO,cAAc;AAAA,MACzB;AACA,UAAI;AAEA,YAAI,CAAC,YAAY;AACb,iBAAO,cAAc;AAAA,QACzB;AACA,eAAO;AAAA,MACX,UAAE;AACE,eAAO,OAAO,UAAU;AAAA,MAC5B;AAAA,IACJ;AAEA,QAAI,SAAS,WAAY;AACrB,YAAM,iBAAiB,cAAc;AACrC,aAAO,OAAO,eAAe,YAAY,eAAe,eAAe,QAAQ,YAAY,eAAe,QAAQ,SAAS;AAAA,IAC/H;AAEA,KAAC,SAAU,MAAM,SAAS;AACtB;AACA,UAAI,OAAO,WAAW,cAAc,OAAO,KAAK;AAC5C,eAAO,CAAC,GAAG,OAAO;AAAA,MACtB,WAAW,OAAO,WAAW,YAAY,OAAO,SAAS;AACrD,eAAO,UAAU,QAAQ;AAAA,MAC7B,OAAO;AACH,aAAK,WAAW,QAAQ;AAAA,MAC5B;AAAA,IACJ,GAAG,SAA+C,WAAY;AAC1D;AAEA,UAAI;AACJ,UAAI;AACJ,UAAI;AAEJ,UAAI,OAAO,GAAG;AACV,iBAAS;AACT,cAAM,OAAO;AACb,8BAAsB,OAAO;AAAA,MACjC,OAAO;AACH,cAAM;AAAA,MACV;AAEA,eAAS,aAAa,OAAO,QAAQ;AACjC,YAAI,OAAO,GAAG;AACV,iBAAO,OAAO,aAAa,OAAO,MAAM;AAAA,QAC5C;AAEA,YAAI,OAAO,SAAS,cAAc,QAAQ;AAC1C,aAAK,QAAQ;AACb,aAAK,SAAS;AACd,eAAO;AAAA,MACX;AAEA,UAAI,oBAAoB,CAAC;AACzB,UAAI,uBAAuB;AAE3B,UAAI,WAAW,SAAU,UAAU;AAC/B,YAAI,oBAAoB;AAExB,YAAI,kBAAkB;AAAA;AAAA,UAElB,KAAK;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,UACN,OAAO;AAAA,QACX;AAEA,YAAI,YAAY,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE;AAEzC,YAAI,sBAAsB;AAAA,UACtB,MAAM,SAAU,IAAI,QAAQ;AACxB,eAAG,MAAM,IAAI,gBAAgB;AAC7B,eAAG,SAAS,CAAC,IAAI,gBAAgB;AACjC,eAAG,SAAS,CAAC,IAAI,gBAAgB;AACjC,eAAG,SAAS,CAAC,IAAI,gBAAgB;AAAA,UACrC;AAAA,UACA,UAAU,SAAU,IAAI,QAAQ,IAAI,IAAI;AACpC,eAAG,MAAM,KAAK,GAAG,KAAK,gBAAgB,MAAM,OAAO,gBAAgB,OAAO;AAC1E,eAAG,SAAS,CAAC,KAAK,GAAG,KAAK,gBAAgB,QAAQ,OAAO,gBAAgB,SAAS;AAClF,eAAG,SAAS,CAAC,KAAK,GAAG,KAAK,gBAAgB,OAAO,OAAO,gBAAgB,QAAQ;AAChF,eAAG,SAAS,CAAC,IAAI,GAAG;AAAA,UACxB;AAAA,UACA,yBAAyB,SAAU,IAAI,QAAQ,IAAI,IAAI;AACnD,eAAG,MAAM,IAAI,gBAAgB;AAC7B,eAAG,SAAS,CAAC,IAAI,gBAAgB;AACjC,eAAG,SAAS,CAAC,IAAI,gBAAgB;AACjC,eAAG,SAAS,CAAC,IAAI,eAAe,IAAI,EAAE;AAAA,UAC1C;AAAA,UACA,6BAA6B,SAAU,IAAI,QAAQ,IAAI,IAAI;AACvD,gBAAI,QAAS,eAAe,IAAI,EAAE,IAAI,MAAO;AAE7C,eAAG,MAAM,KAAK,IAAI,UAAU,GAAG,KAAK,gBAAgB,MAAM,QAAQ,QAAQ,gBAAgB;AAC1F,eAAG,SAAS,CAAC,KAAK,IAAI,UAAU,GAAG,KAAK,gBAAgB,QAAQ,QAAQ,QAAQ,gBAAgB;AAChG,eAAG,SAAS,CAAC,KAAK,IAAI,UAAU,GAAG,KAAK,gBAAgB,OAAO,QAAQ,QAAQ,gBAAgB;AAC/F,eAAG,SAAS,CAAC,IAAI,GAAG;AAAA,UACxB;AAAA,UACA,UAAU,SAAU,IAAI,QAAQ,IAAI,IAAI;AACpC,eAAG,MAAM,IAAI,GAAG;AAChB,eAAG,SAAS,CAAC,IAAI,GAAG;AACpB,eAAG,SAAS,CAAC,IAAI,GAAG;AACpB,eAAG,SAAS,CAAC,IAAI,GAAG;AAAA,UACxB;AAAA,QACJ;AAEA,YAAI,aAAa,oBAAoB;AACrC,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI;AACJ,YAAI,sBAAsB;AAC1B,YAAI,iBAAiB;AACrB,YAAI,OAAO,CAAC;AACZ,YAAI,SAAS,CAAC;AACd,YAAI,sBAAsB,CAAC;AAE3B,YAAI,YAAY;AAAA;AAAA,UAEZ,KAAK;AAAA,UACL,OAAO;AAAA,UACP,MAAM;AAAA,UACN,OAAO;AAAA,UACP,eAAe;AAAA,UACf,eAAe;AAAA,QACnB;AAEA,YAAI,qBAAqB;AACzB,YAAI,eAAe;AACnB,YAAI,kBAAkB;AACtB,YAAI,cAAc;AAClB,YAAI;AAEJ,iBAAS,eAAe,IAAI,IAAI;AAC5B,kBAAQ,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,IAAI,KAAK,IAAI,GAAG,IAAI,GAAG,CAAC,KAAK;AAAA,QACrF;AAEA,iBAAS,kBAAkB,GAAG,GAAG,OAAO,QAAQ,KAAK;AACjD,iBAAO,KAAK,IAAI,QAAQ,MAAM,KAAK,IAAI,SAAS,UAAU,KAAK,IAAI,OAAO,MAAM,KAAK,IAAI,UAAU;AAAA,QACvG;AAEA,iBAAS,mBAAmB,GAAG,GAAG,OAAO,QAAQ,QAAQ;AACrD,cAAI,aAAa;AACjB,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAI;AAEJ,cAAI,yBAAyB,OAAO;AAChC,uBAAW;AACX,iBAAK,IAAI,GAAG,IAAI,cAAc,QAAQ,KAAK;AACvC,4BAAc,cAAc,CAAC;AAC7B,kBAAI,kBAAkB,GAAG,GAAG,OAAO,QAAQ,WAAW,GAAG;AACrD,2BAAW;AACX;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AACA,cAAI,wBAAwB,OAAO;AAC/B,sBAAU;AACV,iBAAK,IAAI,GAAG,IAAI,aAAa,QAAQ,KAAK;AACtC,2BAAa,aAAa,CAAC;AAC3B,kBAAI,kBAAkB,GAAG,GAAG,OAAO,QAAQ,UAAU,GAAG;AACpD,0BAAU;AACV;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAEA,cAAI,wBAAwB;AACxB,mBAAO,eAAe,QAAQ,sBAAsB,MAAM;AAAA,UAC9D;AAEA,cAAI,aAAa,UAAa,YAAY,QAAW;AACjD,mBAAO;AAAA,UACX;AACA,cAAI,aAAa,SAAS,YAAY,MAAM;AACxC,mBAAO;AAAA,UACX;AACA,cAAI,aAAa,QAAQ,YAAY,MAAM;AACvC,yBAAa;AAAA,UACjB;AACA,cAAI,aAAa,SAAS,YAAY,OAAO;AACzC,yBAAa;AAAA,UACjB;AACA,iBAAO;AAAA,QACX;AAEA,iBAAS,oBAAoB;AACzB,cAAI,MAAM,oBAAoB;AAC9B,cAAI;AACJ,eAAK,IAAI,GAAG,IAAI,KAAK,KAAK;AACtB,gBAAI,OAAO,oBAAoB,CAAC,MAAM,YAAY;AAC9C,kCAAoB,CAAC,EAAE,IAAI;AAAA,YAC/B;AAAA,UACJ;AAAA,QACJ;AAEA,iBAAS,KAAK,GAAG,GAAG,UAAU;AAC1B,cAAI;AACJ,cAAI;AAEJ,eAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACpB,iBAAK,IAAI,GAAG,IAAI,GAAG,KAAK;AACpB,uBAAS,GAAG,CAAC;AAAA,YACjB;AAAA,UACJ;AAAA,QACJ;AAEA,iBAAS,WAAW,iBAAiB,OAAO,QAAQ;AAChD,cAAI,aAAa;AACjB,cAAI,WAAW;AACf,cAAI,aAAa;AACjB,cAAI,YAAY;AAChB,cAAI,aAAa;AACjB,cAAI,kBAAkB;AACtB,cAAI,aAAa;AACjB,cAAI,aAAa;AAEjB,eAAK,OAAO,QAAQ,SAAU,eAAe,aAAa;AACtD,gBAAI,UAAU,cAAc,QAAQ,iBAAiB;AACrD,gBAAI,MAAM,gBAAgB,MAAM;AAChC,gBAAI,QAAQ,gBAAgB,SAAS,CAAC;AACtC,gBAAI,OAAO,gBAAgB,SAAS,CAAC;AACrC,gBAAI,QAAQ,gBAAgB,SAAS,CAAC;AACtC,gBAAI,aAAa,cAAc,KAAK,OAAO,IAAI;AAE/C,gBAAI,QAAQ,SAAS,QAAQ,QAAQ,OAAO;AACxC,kBAAI,QAAQ,GAAG;AACX;AAAA,cACJ,WAAW,QAAQ,KAAK;AACpB;AAAA,cACJ;AAAA,YACJ;AAEA;AAEA,wBAAa,MAAM,MAAO;AAC1B,0BAAe,QAAQ,MAAO;AAC9B,yBAAc,OAAO,MAAO;AAC5B,2BAAgB,MAAM,SAAS,MAAO;AACtC,+BAAoB,aAAa,MAAO;AAAA,UAC5C,CAAC;AAED,eAAK,MAAM,KAAK,MAAM,WAAW,UAAU;AAC3C,eAAK,QAAQ,KAAK,MAAM,aAAa,UAAU;AAC/C,eAAK,OAAO,KAAK,MAAM,YAAY,UAAU;AAC7C,eAAK,QAAQ,KAAK,MAAM,aAAa,UAAU;AAC/C,eAAK,aAAa,KAAK,MAAM,kBAAkB,UAAU;AACzD,eAAK,QAAQ,KAAK,MAAO,aAAa,aAAc,GAAG;AACvD,eAAK,QAAQ,KAAK,MAAO,aAAa,aAAc,GAAG;AAEvD,4BAAkB;AAAA,QACtB;AAEA,iBAAS,YAAY,aAAa,UAAU;AAExC,cAAI,QAAQ,YAAY;AACxB,cAAI,SAAS,YAAY;AAEzB,cAAI,mBAAmB,OAAO,WAAW,GAAG;AACxC,oBAAQ,OAAO,CAAC,EAAE;AAClB,qBAAS,OAAO,CAAC,EAAE;AAAA,UACvB;AAEA,cAAI,eAAe,aAAa,OAAO,MAAM;AAC7C,cAAI;AAEJ,uBAAa,WAAW,IAAI,EAAE,UAAU,aAAa,GAAG,GAAG,OAAO,MAAM;AACxE,sBAAY,aAAa,WAAW,IAAI,EAAE,aAAa,GAAG,GAAG,OAAO,MAAM;AAE1E,iBAAO,KAAK,SAAS;AAErB,mBAAS,WAAW,OAAO,MAAM;AAAA,QACrC;AAEA,iBAAS,cAAc,kBAAkB,UAAU;AAC/C,cAAI;AACJ,cAAI,cAAc,IAAI,IAAI;AAE1B,cAAI,CAAC,YAAY,cAAc;AAC3B,wBAAY,eAAe,SAAS,eAAe;AAAA,YAAC;AAAA,UACxD;AAEA,cAAI,gBAAgB;AAChB,wBAAY,aAAa,eAAe,WAAW;AAAA,UACvD;AAEA,sBAAY,UAAU,SAAU,OAAO;AACnC,wBAAY,SAAS;AACrB,wBAAY,UAAU;AACtB,kBAAM,QAAQ,QAAQ,QAAQ,KAAK;AACnC,mBAAO,KAAK,EAAE,OAAO,yBAAyB,gBAAgB,MAAM,KAAK,GAAG,CAAC;AAC7E,qBAAS;AAAA,UACb;AAEA,sBAAY,SAAS,WAAY;AAC7B,wBAAY,SAAS;AACrB,wBAAY,UAAU;AACtB,wBAAY,aAAa,QAAQ;AAAA,UACrC;AAEA,cAAI,OAAO,qBAAqB,UAAU;AACtC,wBAAY,MAAM;AAClB,gBAAI,CAAC,OAAO,KAAK,YAAY,YAAY,YAAY,eAAe,GAAG;AACnE,0BAAY,OAAO;AAAA,YACvB;AAAA,UACJ,WACI,OAAO,iBAAiB,SAAS,eACjC,OAAO,iBAAiB,UAAU,YAClC,OAAO,iBAAiB,WAAW,UACrC;AACE,mBAAO,KAAK,gBAAgB;AAE5B,qBAAS,kBAAkB,iBAAiB,OAAO,iBAAiB,MAAM;AAAA,UAC9E,WAAW,OAAO,WAAW,eAAe,4BAA4B,QAAQ;AAI5E,gCAAoB,gBAAgB,EAC/B,KAAK,SAAU,OAAO;AACnB,0BAAY,SAAS;AACrB,0BAAY,UAAU;AACtB,0BAAY,OAAO,QAAQ;AAAA,YAC/B,CAAC,EACA,MAAM,SAAU,KAAK;AAClB,qBAAO,KAAK;AAAA,gBACR,OAAO,MAAM,MAAM,KAAK;AAAA,cAC5B,CAAC;AACD,uBAAS;AAAA,YACb,CAAC;AAAA,UACT,OAAO;AACH,yBAAa,IAAI,WAAW;AAC5B,uBAAW,SAAS,SAAU,OAAO;AACjC,0BAAY,MAAM,MAAM,OAAO;AAAA,YACnC;AACA,uBAAW,cAAc,gBAAgB;AAAA,UAC7C;AAAA,QACJ;AAEA,iBAAS,eAAe,GAAG,GAAG,OAAO;AACjC,cAAI,UAAU,KAAK,IAAI,IAAI,CAAC;AAE5B,cAAI,OAAO,MAAM,aAAa;AAC1B,mBAAO;AAAA,UACX;AACA,cAAI,OAAO,MAAM,aAAa;AAC1B,mBAAO;AAAA,UACX;AAEA,cAAI,MAAM,GAAG;AACT,mBAAO;AAAA,UACX,WAAW,UAAU,UAAU,KAAK,GAAG;AACnC,mBAAO;AAAA,UACX;AACA,iBAAO;AAAA,QACX;AAEA,iBAAS,yBAAyB,IAAI,IAAI;AACtC,cAAI,QAAQ,eAAe,GAAG,GAAG,GAAG,GAAG,OAAO;AAC9C,cAAI,aAAa,eAAe,GAAG,YAAY,GAAG,YAAY,eAAe;AAC7E,iBAAO,cAAc;AAAA,QACzB;AAEA,iBAAS,cAAc,GAAG,GAAG,GAAG;AAC5B,iBAAO,MAAM,IAAI,OAAO,IAAI,OAAO;AAAA,QACvC;AAEA,iBAAS,UAAU,IAAI,IAAI;AACvB,cAAI,MAAM,GAAG,MAAM,GAAG;AACtB,cAAI,QAAQ,GAAG,MAAM,GAAG;AACxB,cAAI,OAAO,GAAG,MAAM,GAAG;AACvB,iBAAO,OAAO,SAAS;AAAA,QAC3B;AAEA,iBAAS,aAAa,IAAI,IAAI;AAC1B,cAAI,MAAM,eAAe,GAAG,GAAG,GAAG,GAAG,KAAK;AAC1C,cAAI,QAAQ,eAAe,GAAG,GAAG,GAAG,GAAG,OAAO;AAC9C,cAAI,OAAO,eAAe,GAAG,GAAG,GAAG,GAAG,MAAM;AAC5C,cAAI,QAAQ,eAAe,GAAG,GAAG,GAAG,GAAG,OAAO;AAE9C,iBAAO,OAAO,SAAS,QAAQ;AAAA,QACnC;AAEA,iBAAS,cAAc,IAAI,IAAI;AAC3B,iBAAO,KAAK,IAAI,GAAG,aAAa,GAAG,UAAU,IAAI,UAAU;AAAA,QAC/D;AAEA,iBAAS,OAAO,KAAK,OAAO,MAAM;AAC9B,cAAI,IAAI,MAAM;AACd,cAAI,IAAI,QAAQ;AAChB,cAAI,IAAI,OAAO;AACf,cAAI,MAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC1B,cAAI,MAAM,KAAK,IAAI,GAAG,GAAG,CAAC;AAC1B,cAAI;AACJ,cAAI;AAEJ,cAAI,QAAQ,KAAK;AACb,gBAAI;AAAA,UACR,OAAO;AACH,gBAAI,MAAM;AACV,oBAAQ,KAAK;AAAA,cACT,KAAK;AACD,qBAAK,IAAI,KAAK,KAAK,IAAI,IAAI,IAAI;AAC/B;AAAA,cACJ,KAAK;AACD,qBAAK,IAAI,KAAK,IAAI;AAClB;AAAA,cACJ,KAAK;AACD,qBAAK,IAAI,KAAK,IAAI;AAClB;AAAA,cACJ;AACI,qBAAK;AAAA,YACb;AAAA,UACJ;AAEA,iBAAO;AAAA,QACX;AAEA,iBAAS,cAAc,WAAW,KAAK,UAAU,aAAa,eAAe,OAAO;AAChF,cAAI;AACJ,cAAI,WAAW;AACf,cAAI;AACJ,cAAI;AACJ,cAAI,yBAAyB;AAC7B,cAAI,6BAA6B;AACjC,cAAI,uBAAuB;AAE3B,qBAAW,SAAS;AAEpB,eAAK,IAAI,WAAW,IAAI,KAAK,UAAU,KAAK;AACxC,iBAAK,IAAI,WAAW,IAAI,KAAK,UAAU,KAAK;AACxC,kBAAI,MAAM,KAAK,MAAM,GAAG;AAAA,cAExB,OAAO;AACH,2BAAW,cAAc,KAAK,SAAS,gBAAgB,MAAM;AAE7D,oBAAI,CAAC,aAAa,WAAW,KAAK,QAAQ,QAAQ,GAAG;AACjD;AAAA,gBACJ;AAEA,kCAAkB,SAAS;AAC3B,2BAAW,SAAS;AAEpB,oBAAI,cAAc,WAAW,SAAS,GAAG;AACrC;AAAA,gBACJ;AAEA,oBAAI,UAAU,WAAW,SAAS,GAAG;AACjC;AAAA,gBACJ;AAEA,oBAAI,KAAK,IAAI,UAAU,IAAI,UAAU,CAAC,IAAI,KAAK;AAC3C;AAAA,gBACJ;AAEA,oBAAI,6BAA6B,KAAK,yBAAyB,GAAG;AAC9D,yBAAO;AAAA,gBACX;AAAA,cACJ;AAAA,YACJ;AAAA,UACJ;AAEA,cAAI,uBAAuB,GAAG;AAC1B,mBAAO;AAAA,UACX;AAEA,iBAAO;AAAA,QACX;AAEA,iBAAS,UAAU,IAAI,QAAQ,KAAK;AAChC,cAAI,cAAc,YAAY;AAC1B;AAAA,UACJ;AAEA,aAAG,MAAM,IAAI,IAAI;AACjB,aAAG,SAAS,CAAC,IAAI,IAAI;AACrB,aAAG,SAAS,CAAC,IAAI,IAAI;AACrB,aAAG,SAAS,CAAC,IAAI,IAAI,IAAI;AAAA,QAC7B;AAEA,iBAAS,mBAAmB,IAAI,QAAQ,KAAK;AACzC,cAAI,cAAc,YAAY;AAC1B;AAAA,UACJ;AAEA,aAAG,MAAM,IAAI,IAAI;AACjB,aAAG,SAAS,CAAC,IAAI,IAAI;AACrB,aAAG,SAAS,CAAC,IAAI,IAAI;AACrB,aAAG,SAAS,CAAC,IAAI,IAAI,IAAI;AAAA,QAC7B;AAEA,iBAAS,aAAa,KAAK,KAAK,QAAQ;AACpC,cAAI,IAAI,SAAS,QAAQ;AACrB,gBAAI,IAAI,IAAI,MAAM;AAClB,gBAAI,IAAI,IAAI,SAAS,CAAC;AACtB,gBAAI,IAAI,IAAI,SAAS,CAAC;AACtB,gBAAI,IAAI,IAAI,SAAS,CAAC;AAEtB,mBAAO;AAAA,UACX;AAEA,iBAAO;AAAA,QACX;AAEA,iBAAS,kBAAkB,KAAK;AAC5B,cAAI,aAAa,cAAc,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAAA,QACtD;AAEA,iBAAS,WAAW,KAAK;AACrB,cAAI,IAAI,OAAO,IAAI,GAAG,IAAI,GAAG,IAAI,CAAC;AAAA,QACtC;AAEA,iBAAS,cAAc,MAAM,MAAM,OAAO,QAAQ;AAC9C,cAAI,QAAQ,KAAK;AACjB,cAAI,QAAQ,KAAK;AACjB,cAAI;AACJ,cAAI;AACJ,cAAI;AACJ,cAAI;AAEJ,cAAI,CAAC,aAAa;AACd,2BAAe,aAAa,OAAO,MAAM;AAEzC,sBAAU,aAAa,WAAW,IAAI;AACtC,mBAAO,QAAQ,gBAAgB,OAAO,MAAM;AAC5C,kBAAM,KAAK;AAAA,UACf;AAEA,cAAI,gBAAgB;AACpB,cAAI,aAAa;AAAA,YACb,KAAK;AAAA,YACL,MAAM;AAAA,YACN,QAAQ;AAAA,YACR,OAAO;AAAA,UACX;AACA,cAAI,eAAe,SAAU,GAAG,GAAG;AAC/B,uBAAW,OAAO,KAAK,IAAI,GAAG,WAAW,IAAI;AAC7C,uBAAW,QAAQ,KAAK,IAAI,GAAG,WAAW,KAAK;AAC/C,uBAAW,MAAM,KAAK,IAAI,GAAG,WAAW,GAAG;AAC3C,uBAAW,SAAS,KAAK,IAAI,GAAG,WAAW,MAAM;AAAA,UACrD;AAEA,cAAI,OAAO,KAAK,IAAI;AAEpB,cAAI;AAEJ,cAAI,CAAC,CAAC,uBAAuB,uBAAuB,QAAQ,uBAAuB,SAAS,sBAAsB;AAC9G,mBAAO;AAAA,UACX;AAEA,cAAI,SAAS,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE;AACtC,cAAI,SAAS,EAAE,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,EAAE;AAEtC,cAAI,cAAc;AAElB,eAAK,OAAO,QAAQ,SAAU,eAAe,aAAa;AACtD,gBAAI,aAAa;AACb;AAAA,YACJ;AAEA,gBAAI,MAAM;AAEN,kBAAI,cAAc,SAAS,KAAK,gBAAgB,SAAS,GAAG;AACxD;AAAA,cACJ;AAAA,YACJ;AAEA,gBAAI,UAAU,cAAc,QAAQ,iBAAiB;AACrD,gBAAI,CAAC,aAAa,QAAQ,OAAO,QAAQ,CAAC,KAAK,CAAC,aAAa,QAAQ,OAAO,QAAQ,CAAC,GAAG;AACpF;AAAA,YACJ;AAEA,gBAAI,uBAAuB,mBAAmB,eAAe,aAAa,OAAO,QAAQ,MAAM;AAE/F,gBAAI,cAAc;AACd,gCAAkB,MAAM;AACxB,gCAAkB,MAAM;AAExB,kBAAI,yBAAyB,QAAQ,MAAM,KAAK,CAAC,sBAAsB;AACnE,oBAAI,CAAC,aAAa;AACd,qCAAmB,KAAK,QAAQ,MAAM;AAAA,gBAC1C;AAAA,cACJ,OAAO;AACH,oBAAI,CAAC,aAAa;AACd,6BAAW,KAAK,QAAQ,QAAQ,MAAM;AAAA,gBAC1C;AAEA;AACA,6BAAa,eAAe,WAAW;AAAA,cAC3C;AACA;AAAA,YACJ;AAEA,gBAAI,aAAa,QAAQ,MAAM,KAAK,CAAC,sBAAsB;AACvD,kBAAI,CAAC,aAAa;AACd,0BAAU,KAAK,QAAQ,MAAM;AAAA,cACjC;AAAA,YACJ,WACI,uBACC,kBAAkB,MAAM;AAAA,YACzB,kBAAkB,MAAM,GACxB,cAAc,QAAQ,OAAO,GAAG,aAAa,eAAe,KAAK,KAAK,cAAc,QAAQ,OAAO,GAAG,aAAa,eAAe,KAAK,IACzI;AACE,kBAAI,yBAAyB,QAAQ,MAAM,KAAK,CAAC,sBAAsB;AACnE,oBAAI,CAAC,aAAa;AACd,qCAAmB,KAAK,QAAQ,MAAM;AAAA,gBAC1C;AAAA,cACJ,OAAO;AACH,oBAAI,CAAC,aAAa;AACd,6BAAW,KAAK,QAAQ,QAAQ,MAAM;AAAA,gBAC1C;AAEA;AACA,6BAAa,eAAe,WAAW;AAAA,cAC3C;AAAA,YACJ,OAAO;AACH,kBAAI,CAAC,aAAa;AACd,2BAAW,KAAK,QAAQ,QAAQ,MAAM;AAAA,cAC1C;AAEA;AACA,2BAAa,eAAe,WAAW;AAAA,YAC3C;AAEA,gBAAI,aAAa;AACb,kBAAI,yBAA0B,iBAAiB,SAAS,SAAU;AAElE,kBAAI,yBAAyB,sBAAsB;AAC/C,8BAAc;AAAA,cAClB;AAAA,YACJ;AAAA,UACJ,CAAC;AAED,eAAK,wBAAyB,iBAAiB,SAAS,SAAU;AAClE,eAAK,qBAAqB,KAAK,sBAAsB,QAAQ,CAAC;AAC9D,eAAK,aAAa;AAClB,eAAK,eAAe,KAAK,IAAI,IAAI;AAEjC,eAAK,kBAAkB,SAAU,MAAM;AACnC,gBAAI,aAAa;AACb,oBAAM,MAAM,mDAAmD;AAAA,YACnE;AAEA,gBAAI,YAAY;AAEhB,gBAAI,MAAM;AACN,0BAAY,SAAS,MAAM,SAAS,YAAY;AAAA,YACpD;AAEA,oBAAQ,aAAa,MAAM,GAAG,SAAS;AAEvC,mBAAO,aAAa,UAAU,WAAW;AAAA,UAC7C;AAEA,cAAI,CAAC,eAAe,aAAa,UAAU;AACvC,iBAAK,YAAY,SAAU,iBAAiB;AACxC,kBAAI,iBAAiB;AACjB,oBAAI,aAAa,aAAa,QAAQ;AACtC,6BAAa,QAAQ,aAAa;AAClC,wBAAQ,aAAa,MAAM,GAAG,CAAC;AAC/B,wBAAQ,aAAa,MAAM,YAAY,CAAC;AACxC,wBAAQ,aAAa,MAAM,aAAa,GAAG,CAAC;AAAA,cAChD,OAAO;AACH,wBAAQ,aAAa,MAAM,GAAG,CAAC;AAAA,cACnC;AACA,qBAAO,aAAa,SAAS;AAAA,YACjC;AAAA,UACJ;AAAA,QACJ;AAEA,iBAAS,SAAS,MAAM,SAAS,cAAc;AAC3C,cAAI,cAAc;AAElB,kBAAQ,OAAO;AAEf,cAAI,YAAY,QAAQ,YAAY,IAAI,EAAE,QAAQ,cAAc;AAChE,cAAI,YAAY;AAEhB,cAAI,YAAY,aAAa,OAAO;AAChC,yBAAa,QAAQ;AAAA,UACzB;AAEA,uBAAa,UAAU;AAEvB,kBAAQ,YAAY;AACpB,kBAAQ,SAAS,GAAG,GAAG,aAAa,OAAO,YAAY,CAAC;AACxD,kBAAQ,YAAY;AACpB,kBAAQ,SAAS,GAAG,YAAY,GAAG,aAAa,OAAO,CAAC;AAExD,kBAAQ,YAAY;AACpB,kBAAQ,eAAe;AACvB,kBAAQ,OAAO;AACf,kBAAQ,SAAS,MAAM,aAAa,CAAC;AAErC,iBAAO;AAAA,QACX;AAEA,iBAAS,UAAU,KAAK,GAAG,GAAG;AAC1B,cAAI;AACJ,cAAI;AAEJ,cAAI,IAAI,SAAS,KAAK,IAAI,QAAQ,GAAG;AACjC,gBAAI,aAAa,GAAG,CAAC;AACrB,sBAAU,EAAE,WAAW,IAAI;AAC3B,oBAAQ,aAAa,KAAK,GAAG,CAAC;AAC9B,mBAAO,QAAQ,aAAa,GAAG,GAAG,GAAG,CAAC;AAAA,UAC1C;AAEA,iBAAO;AAAA,QACX;AAEA,iBAAS,eAAe,SAAS;AAC7B,cAAI;AAEJ,cAAI,QAAQ,YAAY;AACpB,iBAAK,OAAO,QAAQ,YAAY;AAC5B,kBAAI,QAAQ,WAAW,eAAe,GAAG,GAAG;AACxC,gCAAgB,GAAG,IAAI,QAAQ,WAAW,GAAG,MAAM,SAAS,gBAAgB,GAAG,IAAI,QAAQ,WAAW,GAAG;AAAA,cAC7G;AAAA,YACJ;AAAA,UACJ;AAEA,cAAI,QAAQ,aAAa,oBAAoB,QAAQ,SAAS,GAAG;AAC7D,yBAAa,oBAAoB,QAAQ,SAAS;AAClD,wBAAY,QAAQ;AAAA,UACxB;AAEA,cAAI,QAAQ,cAAc,OAAO,QAAQ,eAAe,YAAY;AAChE,yBAAa,QAAQ;AAAA,UACzB;AAEA,8BAAoB,MAAM,OAAO,QAAQ,YAAY,CAAC,IAAI,oBAAoB,QAAQ;AAEtF,cAAI,QAAQ,wBAAwB,QAAW;AAC3C,kCAAsB,QAAQ;AAAA,UAClC;AAEA,cAAI,QAAQ,mBAAmB,QAAW;AACtC,6BAAiB,QAAQ;AAAA,UAC7B;AAEA,cAAI,QAAQ,gBAAgB,QAAW;AACnC,4BAAgB,CAAC,QAAQ,WAAW;AAAA,UACxC;AAEA,cAAI,QAAQ,eAAe,QAAW;AAClC,2BAAe,CAAC,QAAQ,UAAU;AAAA,UACtC;AAEA,cAAI,QAAQ,kBAAkB,QAAW;AACrC,4BAAgB,QAAQ;AAAA,UAC5B;AAEA,cAAI,QAAQ,iBAAiB,QAAW;AACpC,2BAAe,QAAQ;AAAA,UAC3B;AAEA,cAAI,QAAQ,2BAA2B,QAAW;AAC9C,qCAAyB,QAAQ;AAAA,UACrC;AAAA,QACJ;AAEA,iBAAS,QAAQ,KAAK,KAAK;AACvB,cAAI,yBAAyB,mBAAmB;AAC5C,2BAAe,oBAAoB;AAAA,UACvC;AAEA,mBAAS,iBAAiB;AACtB,gBAAI;AACJ,gBAAI;AACJ,gBAAI,OAAO,WAAW,GAAG;AACrB,kBAAI,OAAO,CAAC,EAAE,SAAS,OAAO,CAAC,EAAE,OAAO;AACpC,uBAAO,CAAC;AACR,qBAAK,QAAQ,OAAO,CAAC,EAAE,QAAQ,OAAO,CAAC,EAAE,QAAQ,OAAO,CAAC,EAAE;AAC3D,kCAAkB;AAClB;AAAA,cACJ;AACA,sBAAQ,OAAO,CAAC,EAAE,QAAQ,OAAO,CAAC,EAAE,QAAQ,OAAO,CAAC,EAAE,QAAQ,OAAO,CAAC,EAAE;AACxE,uBAAS,OAAO,CAAC,EAAE,SAAS,OAAO,CAAC,EAAE,SAAS,OAAO,CAAC,EAAE,SAAS,OAAO,CAAC,EAAE;AAE5E,kBAAI,OAAO,CAAC,EAAE,UAAU,OAAO,CAAC,EAAE,SAAS,OAAO,CAAC,EAAE,WAAW,OAAO,CAAC,EAAE,QAAQ;AAC9E,qBAAK,mBAAmB;AAAA,cAC5B,OAAO;AACH,qBAAK,mBAAmB;AAAA,cAC5B;AAEA,mBAAK,sBAAsB;AAAA,gBACvB,OAAO,OAAO,CAAC,EAAE,QAAQ,OAAO,CAAC,EAAE;AAAA,gBACnC,QAAQ,OAAO,CAAC,EAAE,SAAS,OAAO,CAAC,EAAE;AAAA,cACzC;AAEA,4BAAc,UAAU,OAAO,CAAC,GAAG,OAAO,MAAM,GAAG,UAAU,OAAO,CAAC,GAAG,OAAO,MAAM,GAAG,OAAO,MAAM;AAErG,gCAAkB;AAAA,YACtB;AAAA,UACJ;AAEA,mBAAS,CAAC;AACV,wBAAc,KAAK,cAAc;AACjC,wBAAc,KAAK,cAAc;AAAA,QACrC;AAEA,iBAAS,cAAc,OAAO;AAC1B,cAAI;AACJ,cAAI,YAAY,OAAO,UAAU;AAEjC,cAAI,CAAC,WAAW;AAEZ,6BAAiB;AAAA,UACrB;AAEA,cAAIA,QAAO;AAAA,YACP,yBAAyB,SAAU,WAAW;AAC1C,kBAAI,WAAW;AACX,8BAAc;AACd,uCAAuB;AAAA,cAC3B;AACA,qBAAOA;AAAA,YACX;AAAA,YACA,iBAAiB,WAAY;AACzB,gCAAkB;AAElB,kBAAI,WAAW;AACX,sBAAM;AAAA,cACV;AACA,qBAAOA;AAAA,YACX;AAAA,YACA,iBAAiB,WAAY;AACzB,gCAAkB;AAElB,kBAAI,WAAW;AACX,sBAAM;AAAA,cACV;AACA,qBAAOA;AAAA,YACX;AAAA,YACA,eAAe,WAAY;AACvB,wBAAU,MAAM;AAChB,wBAAU,QAAQ;AAClB,wBAAU,OAAO;AACjB,wBAAU,QAAQ;AAClB,wBAAU,gBAAgB;AAC1B,wBAAU,gBAAgB;AAE1B,mCAAqB;AACrB,6BAAe;AAEf,kBAAI,WAAW;AACX,sBAAM;AAAA,cACV;AACA,qBAAOA;AAAA,YACX;AAAA,YACA,YAAY,WAAY;AACpB,wBAAU,MAAM;AAChB,wBAAU,QAAQ;AAClB,wBAAU,OAAO;AACjB,wBAAU,QAAQ;AAClB,wBAAU,gBAAgB;AAC1B,wBAAU,gBAAgB;AAE1B,mCAAqB;AACrB,6BAAe;AAEf,kBAAI,WAAW;AACX,sBAAM;AAAA,cACV;AACA,qBAAOA;AAAA,YACX;AAAA,YACA,oBAAoB,WAAY;AAC5B,wBAAU,MAAM;AAChB,wBAAU,QAAQ;AAClB,wBAAU,OAAO;AACjB,wBAAU,QAAQ;AAClB,wBAAU,gBAAgB;AAC1B,wBAAU,gBAAgB;AAE1B,mCAAqB;AACrB,6BAAe;AAEf,kBAAI,WAAW;AACX,sBAAM;AAAA,cACV;AACA,qBAAOA;AAAA,YACX;AAAA,YACA,cAAc,WAAY;AACtB,wBAAU,QAAQ;AAClB,wBAAU,gBAAgB;AAC1B,wBAAU,gBAAgB;AAE1B,mCAAqB;AACrB,6BAAe;AAEf,kBAAI,WAAW;AACX,sBAAM;AAAA,cACV;AACA,qBAAOA;AAAA,YACX;AAAA,YACA,aAAa,WAAY;AACrB,wBAAU,MAAM;AAChB,wBAAU,QAAQ;AAClB,wBAAU,OAAO;AACjB,wBAAU,QAAQ;AAClB,wBAAU,gBAAgB;AAC1B,wBAAU,gBAAgB;AAE1B,mCAAqB;AACrB,6BAAe;AAEf,kBAAI,WAAW;AACX,sBAAM;AAAA,cACV;AACA,qBAAOA;AAAA,YACX;AAAA,YACA,SAAS,WAAY;AACjB,kBAAI,WAAW;AACX,sBAAM;AAAA,cACV;AACA,qBAAOA;AAAA,YACX;AAAA,YACA,gBAAgB,SAAU,SAAS;AAC/B,6BAAe,OAAO;AACtB,qBAAOA;AAAA,YACX;AAAA,YACA,YAAY,SAAU,UAAU;AAC5B,kCAAoB,KAAK,QAAQ;AAEjC,kBAAI,UAAU,WAAY;AACtB,wBAAQ,UAAU,cAAc;AAAA,cACpC;AAEA,sBAAQ;AAER,qBAAO,cAAc,OAAO;AAAA,YAChC;AAAA,YACA,sBAAsB,SAAU,gBAAgB;AAC5C,uBAAS,YAAY,WAAW;AAC5B,oBAAI,CAAC,eAAe,eAAe,QAAQ,GAAG;AAC1C;AAAA,gBACJ;AAEA,0BAAU,QAAQ,IAAI,eAAe,QAAQ;AAAA,cACjD;AAAA,YACJ;AAAA,UACJ;AAEA,iBAAOA;AAAA,QACX;AAEA,YAAI,WAAW;AAAA,UACX,YAAY,SAAU,UAAU;AAC5B,gCAAoB,KAAK,QAAQ;AACjC,0BAAc,UAAU,SAAU,WAAW,OAAO,QAAQ;AACxD,yBAAW,UAAU,MAAM,OAAO,MAAM;AAAA,YAC5C,CAAC;AAAA,UACL;AAAA,UACA,WAAW,SAAU,gBAAgB;AACjC,mBAAO,cAAc,cAAc;AAAA,UACvC;AAAA,UACA,gBAAgB,SAAU,SAAS;AAC/B,2BAAe,OAAO;AACtB,mBAAO;AAAA,UACX;AAAA,QACJ;AAEA,eAAO;AAAA,MACX;AAEA,eAAS,wBAAwB,UAAU;AACvC,+BAAuB;AACvB,eAAO;AAAA,MACX;AAEA,eAAS,YAAY,KAAK,QAAQ,iBAAiB;AAC/C,gBAAQ,QAAQ;AAAA,UACZ,KAAK;AACD,gBAAI,cAAc;AAClB;AAAA,UACJ,KAAK;AACD,gBAAI,WAAW;AACf;AAAA,UACJ,KAAK;AACD,gBAAI,mBAAmB;AACvB;AAAA,UACJ,KAAK;AACD,gBAAI,aAAa;AACjB;AAAA,UACJ,KAAK;AACD,gBAAI,YAAY;AAChB;AAAA,UACJ;AACI,kBAAM,IAAI,MAAM,qBAAqB,MAAM;AAAA,QACnD;AAEA,YAAI,qBAAqB,eAAe;AAAA,MAC5C;AAEA,eAAS,UAAU,SAAU,QAAQ,QAAQ,SAAS,IAAI;AACtD,YAAI;AACJ,YAAI;AAEJ,YAAI,OAAO,YAAY,YAAY;AAC/B,qBAAW;AACX,gBAAM,CAAC;AAAA,QACX,OAAO;AACH,qBAAW;AACX,gBAAM,WAAW,CAAC;AAAA,QACtB;AAEA,YAAI,MAAM,SAAS,MAAM;AACzB,YAAI;AAEJ,YAAI,IAAI,QAAQ;AACZ,cAAI,eAAe,IAAI,MAAM;AAAA,QACjC;AAEA,kBAAU,IAAI,UAAU,MAAM;AAE9B,YAAI,IAAI,sBAAsB;AAC1B,kBAAQ,wBAAwB,IAAI,oBAAoB;AAAA,QAC5D;AAEA,YAAI,IAAI,iBAAiB;AACrB,kBAAQ,gBAAgB;AAAA,QAC5B;AAEA,YAAI,oBAAoB,IAAI,aAAa,CAAC;AAC1C,YAAI,OAAO,IAAI,WAAW,UAAU;AAChC,sBAAY,SAAS,IAAI,QAAQ,iBAAiB;AAAA,QACtD,WAAW,IAAI,UAAU,IAAI,OAAO,SAAS;AACzC,cAAI,OAAO,QAAQ,SAAU,GAAG;AAC5B,wBAAY,SAAS,GAAG,iBAAiB;AAAA,UAC7C,CAAC;AAAA,QACL;AAEA,gBAAQ,WAAW,SAAU,MAAM;AAC/B,cAAI,KAAK,OAAO;AACZ,qBAAS,KAAK,KAAK;AAAA,UACvB,OAAO;AACH,qBAAS,MAAM,IAAI;AAAA,UACvB;AAAA,QACJ,CAAC;AAAA,MACL;AAEA,eAAS,iBAAiB;AAC1B,aAAO;AAAA,IACX,CAAC;AAAA;AAAA;",
  "names": ["self"]
}
